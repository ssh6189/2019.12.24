#데이터가 모여 있는 밀도가 높은 공간(반경 r안에 샘플 개수 설정함)에 클러스터 레이블을 할당
import pandas as pd
import folium

file_path='C:/Users/student/Desktop/datas/datas/2016_middle_shcool_graduates_report.xlsx'

df =pd.read_excel(file_path, header=0)

print(df.info())
print(df.columns.values)

mschool_map = folium.Map(location = [37.55, 126.98], tiles = 'Stamen Terrain', zoom_start = 12)

for name, lat, lng in zip (df.학교명, df.위도, df. 경도) :
    folium.CircleMarker([lat, lng],
                              radius=5,
                              color='brown',
                              fill=True,
                              fill_color='yellow',
                              fill_opacity=0.5,
                              popup=name).add_to(mschool_map)

mschool_map.save('C:/Users/student/Desktop/datas/seoul_mschool_location.html')

#지역, 코드, 유형, 주야 등 변수의 one-hot-encoding으로 dummy 변수 변환
from sklearn import preprocessing

label_encoder = preprocessing.LabelEncoder() 
onehot_encoder = preprocessing.OneHotEncoder()

onehot_location = label_encoder.fit_transform(df['지역'])
onehot_code = label_encoder.fit_transform(df['코드'])
onehot_type = label_encoder.fit_transform(df['유형'])
onehot_day = label_encoder.fit_transform(df['주야'])

df['location'] = onehot_location
df['code'] = onehot_code
df['type'] = onehot_type
df['day'] = onehot_day

print(df.head())
print(df.info())

#DBSCAN 군집분석 수행
from sklearn import cluster
#분석에 사용할 속성 [과학고, 외고_국제고, 자사고 ] 진학률
column_list = [9, 10, 13]
X = df.iloc[ : , column_list]
print(X[:5])

# 설명변수 정규화
X= preprocessing.StandardScaler().fit(X).transform(X)
dbscan_model = cluster.DBSCAN(eps=0.2, min_samples=5)
dbscan_model.fit(X)

cluster_label = dbscan_model.labels_
print(cluster_label)

df['Cluster'] = cluster_label
print(df.head())
print('\n')
#클러스터값으로  그룹화하여 출력
grouped_cols =[0, 1, 3] +column_list
grouped = df.groupby('Cluster')
for key, group in grouped:
    print('* key : ' , key)
    print('* number : ' , len(group))
    print(group.iloc[:, grouped_cols].head())
    print('\n')

colors = {-1:'gray', 0:'coral', 1:'black', 2:'green', 3:'red', 4:'purple', 5:'orange', 6:'brown', 7:'magenta', 8:'yellow', 9:'brick', 10:'cyan', 11:'pink'}
cluster_map = folium.Map(location=[37.55, 126.98],  tiles='Stamen Terrain', zoom_start=12)

for name, lat, lng, clus in zip (df.학교명, df.위도, df. 경도, df.Cluster) :
    folium.CircleMarker([lat, lng],
                              radius=5,
                              color=colors[clus],
                              fill=True,
                              fill_color=colors[clus] ,
                              fill_opacity=0.5,
                              popup=name).add_to(cluster_map)
    
cluster_map.save('C:/Users/student/Desktop/datas/seoul_mschool_location.html')